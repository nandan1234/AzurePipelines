{
	"name": "FactSalesDataFlow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SalesDetail",
						"type": "DatasetReference"
					},
					"name": "SalesDetail"
				},
				{
					"dataset": {
						"referenceName": "SalesHeader",
						"type": "DatasetReference"
					},
					"name": "SalesHeader"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "FactSales",
						"type": "DatasetReference"
					},
					"name": "FactSales"
				}
			],
			"transformations": [
				{
					"name": "joinheaderdetail"
				},
				{
					"name": "select1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          SalesOrderID as integer,",
				"          SalesOrderDetailID as integer,",
				"          OrderQty as integer,",
				"          ProductID as integer,",
				"          UnitPrice as decimal(19,4),",
				"          UnitPriceDiscount as decimal(19,4),",
				"          LineTotal as decimal(38,6),",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SalesDetail",
				"source(output(",
				"          SalesOrderID as integer,",
				"          RevisionNumber as integer,",
				"          OrderDate as timestamp,",
				"          DueDate as timestamp,",
				"          ShipDate as timestamp,",
				"          Status as integer,",
				"          OnlineOrderFlag as boolean,",
				"          SalesOrderNumber as string,",
				"          PurchaseOrderNumber as string,",
				"          AccountNumber as string,",
				"          CustomerID as integer,",
				"          ShipToAddressID as integer,",
				"          BillToAddressID as integer,",
				"          ShipMethod as string,",
				"          CreditCardApprovalCode as string,",
				"          SubTotal as decimal(19,4),",
				"          TaxAmt as decimal(19,4),",
				"          Freight as decimal(19,4),",
				"          TotalDue as decimal(19,4),",
				"          Comment as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SalesHeader",
				"SalesDetail, SalesHeader join(SalesDetail@SalesOrderID == SalesHeader@SalesOrderID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinheaderdetail",
				"joinheaderdetail select(mapColumn(",
				"          SalesOrderID = SalesDetail@SalesOrderID,",
				"          OrderQty,",
				"          ProductID,",
				"          UnitPrice,",
				"          OrderDate,",
				"          CustomerID,",
				"          TaxAmt",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 derive(TotalAmount = multiply(UnitPrice,OrderQty)) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ProductID as integer,",
				"          SalesOrderID as integer,",
				"          CustomerID as integer,",
				"          OrderQty as integer,",
				"          UnitPrice as decimal(19,4),",
				"          OrderDate as timestamp,",
				"          TaxAmt as decimal(19,4),",
				"          TotalAmount as decimal(19,4)",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          ProductID,",
				"          SalesOrderID,",
				"          CustomerID,",
				"          OrderQty,",
				"          UnitPrice,",
				"          OrderDate,",
				"          TaxAmt,",
				"          TotalAmount",
				"     )) ~> FactSales"
			]
		}
	}
}